<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/sissy/Desktop/proj10.1/model/proj10.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2360"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,2:mainac"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">-- select buildingId,floorId,roomId,sensor.id as sensorId, value, batteryLevel, airQualitySensor.id as air, energySensor.id as energy , lightSensor.id  as light,temperatureSensor.id as temp
-- from (((((((sensor 
-- join room on roomId = room.id) 
-- join floor on floorId = floor.id) 
-- join buildings on buildingId = buildings.id)
-- LEFT join airQualitySensor on sensor.id = airQualitySensor.id)
-- LEFT join energySensor on sensor.id = energySensor.id)
-- LEFT join lightSensor on sensor.id = lightSensor.id)
-- left join temperatureSensor on sensor.id = temperatureSensor.id)
-- order by roomId ,floorId, buildingId

select room_id,title,date,time,floorId,buildingId from problemReports join room on room_id = room.id join floor on room.floorId = floor.id join buildings on floor.buildingId = buildings.id where buildings.id = 
</sql><current_tab id="0"/></tab_sql></sqlb_project>
